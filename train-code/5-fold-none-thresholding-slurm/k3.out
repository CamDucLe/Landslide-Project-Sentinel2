2023-09-14 13:46:37.922470: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-09-14 13:46:38.794687: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22843 MB memory:  -> device: 0, name: TITAN RTX, pci bus id: 0000:3f:00.0, compute capability: 7.5
Finished preparing dataset!
Python version:  3.8.17
Tensorflow version:  2.8.0
Numpy version:  1.23.5 

==== Test fold:  3  =====
number of training images:  3039
........ creating model ! .........
ListWrapper([<losses.FocalLoss object at 0x7fdcd0521a00>, <losses.IOULoss object at 0x7fdcd0521640>])
<tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=0.0004>
Model: "RNet"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 128, 128, 2  0           []                               
                                3)]                                                               
                                                                                                  
 conv2d (Conv2D)                (None, 128, 128, 12  26624       ['input_1[0][0]']                
                                8)                                                                
                                                                                                  
 batch_normalization (BatchNorm  (None, 128, 128, 12  512        ['conv2d[0][0]']                 
 alization)                     8)                                                                
                                                                                                  
 leaky_re_lu (LeakyReLU)        (None, 128, 128, 12  0           ['batch_normalization[0][0]']    
                                8)                                                                
                                                                                                  
 conv2d_1 (Conv2D)              (None, 128, 128, 12  147584      ['leaky_re_lu[0][0]']            
                                8)                                                                
                                                                                                  
 conv2d_2 (Conv2D)              (None, 128, 128, 12  65664       ['leaky_re_lu[0][0]']            
                                8)                                                                
                                                                                                  
 batch_normalization_1 (BatchNo  (None, 128, 128, 12  512        ['conv2d_1[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 batch_normalization_2 (BatchNo  (None, 128, 128, 12  512        ['conv2d_2[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 leaky_re_lu_1 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_1[0][0]']  
                                8)                                                                
                                                                                                  
 leaky_re_lu_2 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_2[0][0]']  
                                8)                                                                
                                                                                                  
 tf.__operators__.add (TFOpLamb  (None, 128, 128, 12  0          ['leaky_re_lu_1[0][0]',          
 da)                            8)                                'leaky_re_lu_2[0][0]']          
                                                                                                  
 conv2d_3 (Conv2D)              (None, 128, 128, 12  147584      ['tf.__operators__.add[0][0]']   
                                8)                                                                
                                                                                                  
 batch_normalization_3 (BatchNo  (None, 128, 128, 12  512        ['conv2d_3[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 leaky_re_lu_3 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_3[0][0]']  
                                8)                                                                
                                                                                                  
 global_average_pooling2d (Glob  (None, 128)         0           ['leaky_re_lu_3[0][0]']          
 alAveragePooling2D)                                                                              
                                                                                                  
 dense (Dense)                  (None, 64)           8256        ['global_average_pooling2d[0][0]'
                                                                 ]                                
                                                                                                  
 dense_1 (Dense)                (None, 128)          8320        ['dense[0][0]']                  
                                                                                                  
 reshape (Reshape)              (None, 1, 1, 128)    0           ['dense_1[0][0]']                
                                                                                                  
 tf.math.multiply (TFOpLambda)  (None, 128, 128, 12  0           ['leaky_re_lu_3[0][0]',          
                                8)                                'reshape[0][0]']                
                                                                                                  
 tf.__operators__.add_1 (TFOpLa  (None, 128, 128, 12  0          ['tf.math.multiply[0][0]',       
 mbda)                          8)                                'leaky_re_lu[0][0]']            
                                                                                                  
 conv2d_4 (Conv2D)              (None, 64, 64, 128)  65664       ['tf.__operators__.add_1[0][0]'] 
                                                                                                  
 conv2d_5 (Conv2D)              (None, 64, 64, 128)  147584      ['conv2d_4[0][0]']               
                                                                                                  
 conv2d_6 (Conv2D)              (None, 64, 64, 128)  65664       ['conv2d_4[0][0]']               
                                                                                                  
 batch_normalization_4 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_5[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 batch_normalization_5 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_6[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_4 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_4[0][0]']  
                                                                                                  
 leaky_re_lu_5 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_5[0][0]']  
                                                                                                  
 tf.__operators__.add_2 (TFOpLa  (None, 64, 64, 128)  0          ['leaky_re_lu_4[0][0]',          
 mbda)                                                            'leaky_re_lu_5[0][0]']          
                                                                                                  
 conv2d_7 (Conv2D)              (None, 64, 64, 128)  147584      ['tf.__operators__.add_2[0][0]'] 
                                                                                                  
 batch_normalization_6 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_7[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_6 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_6[0][0]']  
                                                                                                  
 global_average_pooling2d_1 (Gl  (None, 128)         0           ['leaky_re_lu_6[0][0]']          
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_2 (Dense)                (None, 64)           8256        ['global_average_pooling2d_1[0][0
                                                                 ]']                              
                                                                                                  
 dense_3 (Dense)                (None, 128)          8320        ['dense_2[0][0]']                
                                                                                                  
 reshape_1 (Reshape)            (None, 1, 1, 128)    0           ['dense_3[0][0]']                
                                                                                                  
 tf.math.multiply_1 (TFOpLambda  (None, 64, 64, 128)  0          ['leaky_re_lu_6[0][0]',          
 )                                                                'reshape_1[0][0]']              
                                                                                                  
 tf.__operators__.add_3 (TFOpLa  (None, 64, 64, 128)  0          ['tf.math.multiply_1[0][0]',     
 mbda)                                                            'conv2d_4[0][0]']               
                                                                                                  
 conv2d_8 (Conv2D)              (None, 32, 32, 128)  65664       ['tf.__operators__.add_3[0][0]'] 
                                                                                                  
 conv2d_9 (Conv2D)              (None, 32, 32, 128)  147584      ['conv2d_8[0][0]']               
                                                                                                  
 conv2d_10 (Conv2D)             (None, 32, 32, 128)  65664       ['conv2d_8[0][0]']               
                                                                                                  
 batch_normalization_7 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_9[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 batch_normalization_8 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_10[0][0]']              
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_7 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_7[0][0]']  
                                                                                                  
 leaky_re_lu_8 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_8[0][0]']  
                                                                                                  
 tf.__operators__.add_4 (TFOpLa  (None, 32, 32, 128)  0          ['leaky_re_lu_7[0][0]',          
 mbda)                                                            'leaky_re_lu_8[0][0]']          
                                                                                                  
 conv2d_11 (Conv2D)             (None, 32, 32, 128)  147584      ['tf.__operators__.add_4[0][0]'] 
                                                                                                  
 batch_normalization_9 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_11[0][0]']              
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_9 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_9[0][0]']  
                                                                                                  
 global_average_pooling2d_2 (Gl  (None, 128)         0           ['leaky_re_lu_9[0][0]']          
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_4 (Dense)                (None, 64)           8256        ['global_average_pooling2d_2[0][0
                                                                 ]']                              
                                                                                                  
 dense_5 (Dense)                (None, 128)          8320        ['dense_4[0][0]']                
                                                                                                  
 reshape_2 (Reshape)            (None, 1, 1, 128)    0           ['dense_5[0][0]']                
                                                                                                  
 tf.math.multiply_2 (TFOpLambda  (None, 32, 32, 128)  0          ['leaky_re_lu_9[0][0]',          
 )                                                                'reshape_2[0][0]']              
                                                                                                  
 tf.__operators__.add_5 (TFOpLa  (None, 32, 32, 128)  0          ['tf.math.multiply_2[0][0]',     
 mbda)                                                            'conv2d_8[0][0]']               
                                                                                                  
 conv2d_12 (Conv2D)             (None, 16, 16, 128)  65664       ['tf.__operators__.add_5[0][0]'] 
                                                                                                  
 conv2d_13 (Conv2D)             (None, 16, 16, 128)  147584      ['conv2d_12[0][0]']              
                                                                                                  
 conv2d_14 (Conv2D)             (None, 16, 16, 128)  65664       ['conv2d_12[0][0]']              
                                                                                                  
 batch_normalization_10 (BatchN  (None, 16, 16, 128)  512        ['conv2d_13[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_11 (BatchN  (None, 16, 16, 128)  512        ['conv2d_14[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_10 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_10[0][0]'] 
                                                                                                  
 leaky_re_lu_11 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_11[0][0]'] 
                                                                                                  
 tf.__operators__.add_6 (TFOpLa  (None, 16, 16, 128)  0          ['leaky_re_lu_10[0][0]',         
 mbda)                                                            'leaky_re_lu_11[0][0]']         
                                                                                                  
 conv2d_15 (Conv2D)             (None, 16, 16, 128)  147584      ['tf.__operators__.add_6[0][0]'] 
                                                                                                  
 batch_normalization_12 (BatchN  (None, 16, 16, 128)  512        ['conv2d_15[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_12 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_12[0][0]'] 
                                                                                                  
 global_average_pooling2d_3 (Gl  (None, 128)         0           ['leaky_re_lu_12[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_6 (Dense)                (None, 64)           8256        ['global_average_pooling2d_3[0][0
                                                                 ]']                              
                                                                                                  
 dense_7 (Dense)                (None, 128)          8320        ['dense_6[0][0]']                
                                                                                                  
 reshape_3 (Reshape)            (None, 1, 1, 128)    0           ['dense_7[0][0]']                
                                                                                                  
 tf.math.multiply_3 (TFOpLambda  (None, 16, 16, 128)  0          ['leaky_re_lu_12[0][0]',         
 )                                                                'reshape_3[0][0]']              
                                                                                                  
 tf.__operators__.add_7 (TFOpLa  (None, 16, 16, 128)  0          ['tf.math.multiply_3[0][0]',     
 mbda)                                                            'conv2d_12[0][0]']              
                                                                                                  
 conv2d_16 (Conv2D)             (None, 8, 8, 128)    65664       ['tf.__operators__.add_7[0][0]'] 
                                                                                                  
 conv2d_transpose (Conv2DTransp  (None, 16, 16, 128)  65664      ['conv2d_16[0][0]']              
 ose)                                                                                             
                                                                                                  
 concatenate (Concatenate)      (None, 16, 16, 256)  0           ['conv2d_transpose[0][0]',       
                                                                  'tf.__operators__.add_7[0][0]'] 
                                                                                                  
 conv2d_20 (Conv2D)             (None, 16, 16, 256)  590080      ['concatenate[0][0]']            
                                                                                                  
 conv2d_21 (Conv2D)             (None, 16, 16, 256)  262400      ['concatenate[0][0]']            
                                                                                                  
 batch_normalization_16 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_20[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_17 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_21[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_16 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_16[0][0]'] 
                                                                                                  
 leaky_re_lu_17 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_17[0][0]'] 
                                                                                                  
 tf.__operators__.add_10 (TFOpL  (None, 16, 16, 256)  0          ['leaky_re_lu_16[0][0]',         
 ambda)                                                           'leaky_re_lu_17[0][0]']         
                                                                                                  
 conv2d_22 (Conv2D)             (None, 16, 16, 256)  590080      ['tf.__operators__.add_10[0][0]']
                                                                                                  
 batch_normalization_18 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_22[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_18 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_18[0][0]'] 
                                                                                                  
 global_average_pooling2d_5 (Gl  (None, 256)         0           ['leaky_re_lu_18[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_10 (Dense)               (None, 128)          32896       ['global_average_pooling2d_5[0][0
                                                                 ]']                              
                                                                                                  
 dense_11 (Dense)               (None, 256)          33024       ['dense_10[0][0]']               
                                                                                                  
 reshape_5 (Reshape)            (None, 1, 1, 256)    0           ['dense_11[0][0]']               
                                                                                                  
 tf.math.multiply_5 (TFOpLambda  (None, 16, 16, 256)  0          ['leaky_re_lu_18[0][0]',         
 )                                                                'reshape_5[0][0]']              
                                                                                                  
 tf.__operators__.add_11 (TFOpL  (None, 16, 16, 256)  0          ['tf.math.multiply_5[0][0]',     
 ambda)                                                           'concatenate[0][0]']            
                                                                                                  
 conv2d_transpose_1 (Conv2DTran  (None, 32, 32, 256)  262400     ['tf.__operators__.add_11[0][0]']
 spose)                                                                                           
                                                                                                  
 concatenate_1 (Concatenate)    (None, 32, 32, 384)  0           ['conv2d_transpose_1[0][0]',     
                                                                  'tf.__operators__.add_5[0][0]'] 
                                                                                                  
 conv2d_23 (Conv2D)             (None, 32, 32, 384)  1327488     ['concatenate_1[0][0]']          
                                                                                                  
 conv2d_24 (Conv2D)             (None, 32, 32, 384)  590208      ['concatenate_1[0][0]']          
                                                                                                  
 batch_normalization_19 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_23[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_20 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_24[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_19 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_19[0][0]'] 
                                                                                                  
 leaky_re_lu_20 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_20[0][0]'] 
                                                                                                  
 tf.__operators__.add_12 (TFOpL  (None, 32, 32, 384)  0          ['leaky_re_lu_19[0][0]',         
 ambda)                                                           'leaky_re_lu_20[0][0]']         
                                                                                                  
 conv2d_25 (Conv2D)             (None, 32, 32, 384)  1327488     ['tf.__operators__.add_12[0][0]']
                                                                                                  
 batch_normalization_21 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_25[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_21 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_21[0][0]'] 
                                                                                                  
 global_average_pooling2d_6 (Gl  (None, 384)         0           ['leaky_re_lu_21[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_12 (Dense)               (None, 192)          73920       ['global_average_pooling2d_6[0][0
                                                                 ]']                              
                                                                                                  
 dense_13 (Dense)               (None, 384)          74112       ['dense_12[0][0]']               
                                                                                                  
 reshape_6 (Reshape)            (None, 1, 1, 384)    0           ['dense_13[0][0]']               
                                                                                                  
 tf.math.multiply_6 (TFOpLambda  (None, 32, 32, 384)  0          ['leaky_re_lu_21[0][0]',         
 )                                                                'reshape_6[0][0]']              
                                                                                                  
 tf.__operators__.add_13 (TFOpL  (None, 32, 32, 384)  0          ['tf.math.multiply_6[0][0]',     
 ambda)                                                           'concatenate_1[0][0]']          
                                                                                                  
 conv2d_transpose_2 (Conv2DTran  (None, 64, 64, 384)  590208     ['tf.__operators__.add_13[0][0]']
 spose)                                                                                           
                                                                                                  
 concatenate_2 (Concatenate)    (None, 64, 64, 512)  0           ['conv2d_transpose_2[0][0]',     
                                                                  'tf.__operators__.add_3[0][0]'] 
                                                                                                  
 conv2d_26 (Conv2D)             (None, 64, 64, 512)  2359808     ['concatenate_2[0][0]']          
                                                                                                  
 conv2d_27 (Conv2D)             (None, 64, 64, 512)  1049088     ['concatenate_2[0][0]']          
                                                                                                  
 batch_normalization_22 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_26[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_23 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_27[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_22 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_22[0][0]'] 
                                                                                                  
 leaky_re_lu_23 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_23[0][0]'] 
                                                                                                  
 tf.__operators__.add_14 (TFOpL  (None, 64, 64, 512)  0          ['leaky_re_lu_22[0][0]',         
 ambda)                                                           'leaky_re_lu_23[0][0]']         
                                                                                                  
 conv2d_28 (Conv2D)             (None, 64, 64, 512)  2359808     ['tf.__operators__.add_14[0][0]']
                                                                                                  
 batch_normalization_24 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_28[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_24 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_24[0][0]'] 
                                                                                                  
 global_average_pooling2d_7 (Gl  (None, 512)         0           ['leaky_re_lu_24[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_14 (Dense)               (None, 256)          131328      ['global_average_pooling2d_7[0][0
                                                                 ]']                              
                                                                                                  
 dense_15 (Dense)               (None, 512)          131584      ['dense_14[0][0]']               
                                                                                                  
 reshape_7 (Reshape)            (None, 1, 1, 512)    0           ['dense_15[0][0]']               
                                                                                                  
 tf.math.multiply_7 (TFOpLambda  (None, 64, 64, 512)  0          ['leaky_re_lu_24[0][0]',         
 )                                                                'reshape_7[0][0]']              
                                                                                                  
 tf.__operators__.add_15 (TFOpL  (None, 64, 64, 512)  0          ['tf.math.multiply_7[0][0]',     
 ambda)                                                           'concatenate_2[0][0]']          
                                                                                                  
 conv2d_transpose_3 (Conv2DTran  (None, 128, 128, 51  1049088    ['tf.__operators__.add_15[0][0]']
 spose)                         2)                                                                
                                                                                                  
 concatenate_3 (Concatenate)    (None, 128, 128, 64  0           ['conv2d_transpose_3[0][0]',     
                                0)                                'tf.__operators__.add_1[0][0]'] 
                                                                                                  
 conv2d_29 (Conv2D)             (None, 128, 128, 64  3687040     ['concatenate_3[0][0]']          
                                0)                                                                
                                                                                                  
 conv2d_30 (Conv2D)             (None, 128, 128, 64  1639040     ['concatenate_3[0][0]']          
                                0)                                                                
                                                                                                  
 batch_normalization_25 (BatchN  (None, 128, 128, 64  2560       ['conv2d_29[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 batch_normalization_26 (BatchN  (None, 128, 128, 64  2560       ['conv2d_30[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 leaky_re_lu_25 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_25[0][0]'] 
                                0)                                                                
                                                                                                  
 leaky_re_lu_26 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_26[0][0]'] 
                                0)                                                                
                                                                                                  
 tf.__operators__.add_16 (TFOpL  (None, 128, 128, 64  0          ['leaky_re_lu_25[0][0]',         
 ambda)                         0)                                'leaky_re_lu_26[0][0]']         
                                                                                                  
 conv2d_31 (Conv2D)             (None, 128, 128, 64  3687040     ['tf.__operators__.add_16[0][0]']
                                0)                                                                
                                                                                                  
 batch_normalization_27 (BatchN  (None, 128, 128, 64  2560       ['conv2d_31[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 leaky_re_lu_27 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_27[0][0]'] 
                                0)                                                                
                                                                                                  
 global_average_pooling2d_8 (Gl  (None, 640)         0           ['leaky_re_lu_27[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_16 (Dense)               (None, 320)          205120      ['global_average_pooling2d_8[0][0
                                                                 ]']                              
                                                                                                  
 dense_17 (Dense)               (None, 640)          205440      ['dense_16[0][0]']               
                                                                                                  
 reshape_8 (Reshape)            (None, 1, 1, 640)    0           ['dense_17[0][0]']               
                                                                                                  
 tf.math.multiply_8 (TFOpLambda  (None, 128, 128, 64  0          ['leaky_re_lu_27[0][0]',         
 )                              0)                                'reshape_8[0][0]']              
                                                                                                  
 tf.__operators__.add_17 (TFOpL  (None, 128, 128, 64  0          ['tf.math.multiply_8[0][0]',     
 ambda)                         0)                                'concatenate_3[0][0]']          
                                                                                                  
 dropout (Dropout)              (None, 128, 128, 64  0           ['tf.__operators__.add_17[0][0]']
                                0)                                                                
                                                                                                  
 conv2d_transpose_4 (Conv2DTran  (None, 256, 256, 64  368704     ['dropout[0][0]']                
 spose)                         )                                                                 
                                                                                                  
 conv2d_32 (Conv2D)             (None, 64, 64, 64)   368704      ['dropout[0][0]']                
                                                                                                  
 conv2d_33 (Conv2D)             (None, 256, 256, 2)  130         ['conv2d_transpose_4[0][0]']     
                                                                                                  
 conv2d_34 (Conv2D)             (None, 128, 128, 2)  1282        ['dropout[0][0]']                
                                                                                                  
 conv2d_35 (Conv2D)             (None, 64, 64, 2)    130         ['conv2d_32[0][0]']              
                                                                                                  
==================================================================================================
Total params: 24,890,374
Trainable params: 24,876,294
Non-trainable params: 14,080
__________________________________________________________________________________________________
2023-09-14 13:46:40.827440: I tensorflow/stream_executor/cuda/cuda_dnn.cc:368] Loaded cuDNN version 8101
### START TRAINING PROCESS ###
batch train:  254 3
batch test:  64 4


 ==================== Epoch  0 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........


 ==================== Epoch  1 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.587757 ; Test F1:  0.68372524 ; Test Accuracy:  0.9194341559159128   and Testing Time :  0:00:32.329214
...... Save model completed ......


 ==================== Epoch  2 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6444887 ; Test F1:  0.7418575 ; Test Accuracy:  0.9463583695261102   and Testing Time :  0:00:29.665669
...... Save model completed ......


 ==================== Epoch  3 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.67240447 ; Test F1:  0.76904535 ; Test Accuracy:  0.9559722900390625   and Testing Time :  0:00:29.928819
...... Save model completed ......


 ==================== Epoch  4 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6651153 ; Test F1:  0.7621201 ; Test Accuracy:  0.9534211811266448   and Testing Time :  0:00:29.343461


 ==================== Epoch  5 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.68564284 ; Test F1:  0.78170574 ; Test Accuracy:  0.9591989617598684   and Testing Time :  0:00:29.147279
...... Save model completed ......


 ==================== Epoch  6 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7448023 ; Test F1:  0.83363914 ; Test Accuracy:  0.9745546842876234   and Testing Time :  0:00:29.204753
...... Save model completed ......


 ==================== Epoch  7 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7176714 ; Test F1:  0.81058663 ; Test Accuracy:  0.9678637052837171   and Testing Time :  0:00:29.573779


 ==================== Epoch  8 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.72419685 ; Test F1:  0.81632495 ; Test Accuracy:  0.969151466771176   and Testing Time :  0:00:29.568307


 ==================== Epoch  9 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7578792 ; Test F1:  0.8443886 ; Test Accuracy:  0.9771466706928454   and Testing Time :  0:00:29.623052
...... Save model completed ......


 ==================== Epoch  10 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.75671947 ; Test F1:  0.84334505 ; Test Accuracy:  0.9774971409847862   and Testing Time :  0:00:29.279034


 ==================== Epoch  11 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.74669886 ; Test F1:  0.8352471 ; Test Accuracy:  0.9747737683747945   and Testing Time :  0:00:29.757429


 ==================== Epoch  12 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7702496 ; Test F1:  0.85417986 ; Test Accuracy:  0.9801868639494243   and Testing Time :  0:00:30.168196
...... Save model completed ......


 ==================== Epoch  13 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7768117 ; Test F1:  0.8593284 ; Test Accuracy:  0.9814456337376645   and Testing Time :  0:00:30.009462
...... Save model completed ......


 ==================== Epoch  14 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.74405634 ; Test F1:  0.8327898 ; Test Accuracy:  0.9755983051500823   and Testing Time :  0:00:29.463585


 ==================== Epoch  15 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.77712405 ; Test F1:  0.85939384 ; Test Accuracy:  0.9826346949527138   and Testing Time :  0:00:29.795239
...... Save model completed ......


 ==================== Epoch  16 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.78146684 ; Test F1:  0.8628191 ; Test Accuracy:  0.9831071552477385   and Testing Time :  0:00:29.805836
...... Save model completed ......


 ==================== Epoch  17 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7805717 ; Test F1:  0.8619827 ; Test Accuracy:  0.9838712993421053   and Testing Time :  0:00:30.018554


 ==================== Epoch  18 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7816032 ; Test F1:  0.86284435 ; Test Accuracy:  0.9836542229903372   and Testing Time :  0:00:29.839047
...... Save model completed ......


 ==================== Epoch  19 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.782001 ; Test F1:  0.8632738 ; Test Accuracy:  0.9829307154605263   and Testing Time :  0:00:31.070753
...... Save model completed ......


 ==================== Epoch  20 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7856523 ; Test F1:  0.86615574 ; Test Accuracy:  0.9831055490594162   and Testing Time :  0:00:30.617768
...... Save model completed ......


 ==================== Epoch  21 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.78832257 ; Test F1:  0.8682444 ; Test Accuracy:  0.9832541214792352   and Testing Time :  0:00:30.932053
...... Save model completed ......


 ==================== Epoch  22 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.78842044 ; Test F1:  0.86818814 ; Test Accuracy:  0.9841642680921052   and Testing Time :  0:00:30.623689
...... Save model completed ......


 ==================== Epoch  23 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7881689 ; Test F1:  0.8679665 ; Test Accuracy:  0.9843212730006168   and Testing Time :  0:00:30.707760


 ==================== Epoch  24 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.78902817 ; Test F1:  0.86871976 ; Test Accuracy:  0.9838020726254112   and Testing Time :  0:00:30.858146
...... Save model completed ......


 ==================== Epoch  25 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7873992 ; Test F1:  0.86760455 ; Test Accuracy:  0.9826542904502467   and Testing Time :  0:00:31.362001


 ==================== Epoch  26 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7907629 ; Test F1:  0.8701676 ; Test Accuracy:  0.9832097906815378   and Testing Time :  0:00:31.447189
...... Save model completed ......


 ==================== Epoch  27 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79405344 ; Test F1:  0.8726158 ; Test Accuracy:  0.9840426796361019   and Testing Time :  0:00:31.030872
...... Save model completed ......


 ==================== Epoch  28 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7929585 ; Test F1:  0.87179375 ; Test Accuracy:  0.9838301809210527   and Testing Time :  0:00:31.606531


 ==================== Epoch  29 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7913294 ; Test F1:  0.870551 ; Test Accuracy:  0.983624910053454   and Testing Time :  0:00:31.545131


 ==================== Epoch  30 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7960034 ; Test F1:  0.87416613 ; Test Accuracy:  0.9837683426706414   and Testing Time :  0:00:31.683463
...... Save model completed ......


 ==================== Epoch  31 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79828024 ; Test F1:  0.8758316 ; Test Accuracy:  0.9844259161698191   and Testing Time :  0:00:31.615417
...... Save model completed ......


 ==================== Epoch  32 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7977029 ; Test F1:  0.8754052 ; Test Accuracy:  0.9842944496556332   and Testing Time :  0:00:31.555660


 ==================== Epoch  33 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.798416 ; Test F1:  0.875914 ; Test Accuracy:  0.9845870971679688   and Testing Time :  0:00:31.423423
...... Save model completed ......


 ==================== Epoch  34 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7975884 ; Test F1:  0.875306 ; Test Accuracy:  0.9843733938116777   and Testing Time :  0:00:31.424919


 ==================== Epoch  35 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7988564 ; Test F1:  0.876227 ; Test Accuracy:  0.984773816560444   and Testing Time :  0:00:31.341376
...... Save model completed ......


 ==================== Epoch  36 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7959441 ; Test F1:  0.8739179 ; Test Accuracy:  0.9852181685598274   and Testing Time :  0:00:29.507827
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7992084 ; Test F1:  0.8764945 ; Test Accuracy:  0.9847970259817023   and Testing Time :  0:00:30.963166
...... Save model completed ......


 ==================== Epoch  37 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79604155 ; Test F1:  0.873992 ; Test Accuracy:  0.9852270829050165   and Testing Time :  0:00:30.082022
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.799626 ; Test F1:  0.87680876 ; Test Accuracy:  0.9848438463712993   and Testing Time :  0:00:31.775169
...... Save model completed ......


 ==================== Epoch  38 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7963542 ; Test F1:  0.8742384 ; Test Accuracy:  0.9851965653268915   and Testing Time :  0:00:30.101291
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7990826 ; Test F1:  0.8763796 ; Test Accuracy:  0.9849297774465461   and Testing Time :  0:00:31.583648


 ==================== Epoch  39 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7966845 ; Test F1:  0.87449527 ; Test Accuracy:  0.9851882934570313   and Testing Time :  0:00:30.176259
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7990484 ; Test F1:  0.87637484 ; Test Accuracy:  0.9847726922286184   and Testing Time :  0:00:31.814599


 ==================== Epoch  40 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7952063 ; Test F1:  0.8733455 ; Test Accuracy:  0.9852198550575658   and Testing Time :  0:00:30.202844
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7989241 ; Test F1:  0.8762727 ; Test Accuracy:  0.9848217612818668   and Testing Time :  0:00:31.901071


 ==================== Epoch  41 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7965848 ; Test F1:  0.8744199 ; Test Accuracy:  0.9851739180715461   and Testing Time :  0:00:30.306401
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7988518 ; Test F1:  0.8762504 ; Test Accuracy:  0.9845783434416119   and Testing Time :  0:00:31.961526


 ==================== Epoch  42 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7955852 ; Test F1:  0.8736336 ; Test Accuracy:  0.9852612144068668   and Testing Time :  0:00:30.261216
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7992384 ; Test F1:  0.87649363 ; Test Accuracy:  0.9849721808182565   and Testing Time :  0:00:31.729695


 ==================== Epoch  43 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79558694 ; Test F1:  0.87363386 ; Test Accuracy:  0.9852690044202302   and Testing Time :  0:00:30.093971
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79931617 ; Test F1:  0.87654614 ; Test Accuracy:  0.9850239000822368   and Testing Time :  0:00:32.047686


 ==================== Epoch  44 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7958094 ; Test F1:  0.8738065 ; Test Accuracy:  0.985268843801398   and Testing Time :  0:00:30.219561
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7993765 ; Test F1:  0.8765775 ; Test Accuracy:  0.9851343255293997   and Testing Time :  0:00:31.698804


 ==================== Epoch  45 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79490924 ; Test F1:  0.87310624 ; Test Accuracy:  0.9852799265008224   and Testing Time :  0:00:30.230229
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7993679 ; Test F1:  0.8765874 ; Test Accuracy:  0.9850138614052221   and Testing Time :  0:00:31.855799


 ==================== Epoch  46 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7953402 ; Test F1:  0.8734427 ; Test Accuracy:  0.9852672376130757   and Testing Time :  0:00:30.365156
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7991736 ; Test F1:  0.87643754 ; Test Accuracy:  0.9850181178042763   and Testing Time :  0:00:31.836291


 ==================== Epoch  47 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7950989 ; Test F1:  0.87325877 ; Test Accuracy:  0.9852422613846629   and Testing Time :  0:00:30.251929
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79948974 ; Test F1:  0.8766935 ; Test Accuracy:  0.984922228361431   and Testing Time :  0:00:31.826601


 ==================== Epoch  48 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7958765 ; Test F1:  0.87385774 ; Test Accuracy:  0.9852730198910362   and Testing Time :  0:00:30.707819
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7993616 ; Test F1:  0.87659323 ; Test Accuracy:  0.9849362825092517   and Testing Time :  0:00:31.773573


 ==================== Epoch  49 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7956799 ; Test F1:  0.87371033 ; Test Accuracy:  0.9852373625102796   and Testing Time :  0:00:30.238410
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.798879 ; Test F1:  0.87620294 ; Test Accuracy:  0.9850769846062911   and Testing Time :  0:00:31.782014


 ==================== Epoch  50 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.798096 ; Test F1:  0.87558115 ; Test Accuracy:  0.9852154380396793   and Testing Time :  0:00:30.228255
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7986531 ; Test F1:  0.87602043 ; Test Accuracy:  0.9851417139956825   and Testing Time :  0:00:31.931607


 ==================== Epoch  51 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7975827 ; Test F1:  0.87517965 ; Test Accuracy:  0.985255271510074   and Testing Time :  0:00:30.483110
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79852235 ; Test F1:  0.8759111 ; Test Accuracy:  0.985204355340255   and Testing Time :  0:00:31.828622


 ==================== Epoch  52 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7973969 ; Test F1:  0.8750344 ; Test Accuracy:  0.9852692453484786   and Testing Time :  0:00:30.140518
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79847705 ; Test F1:  0.8758783 ; Test Accuracy:  0.985189498098273   and Testing Time :  0:00:31.825578


 ==================== Epoch  53 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79779094 ; Test F1:  0.87534213 ; Test Accuracy:  0.9852426629317435   and Testing Time :  0:00:30.424405
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7984896 ; Test F1:  0.8758893 ; Test Accuracy:  0.9851794594212582   and Testing Time :  0:00:31.944099


 ==================== Epoch  54 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7976142 ; Test F1:  0.87520695 ; Test Accuracy:  0.9852343910618833   and Testing Time :  0:00:30.268421
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79865956 ; Test F1:  0.8760216 ; Test Accuracy:  0.9851687782689145   and Testing Time :  0:00:31.876452


 ==================== Epoch  55 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7976551 ; Test F1:  0.87523687 ; Test Accuracy:  0.9852459556178043   and Testing Time :  0:00:30.149660
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79864854 ; Test F1:  0.876013 ; Test Accuracy:  0.9851700632195723   and Testing Time :  0:00:31.813058


 ==================== Epoch  56 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79763573 ; Test F1:  0.87522024 ; Test Accuracy:  0.9852588051243832   and Testing Time :  0:00:30.478728
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79843146 ; Test F1:  0.8758422 ; Test Accuracy:  0.9851957622327303   and Testing Time :  0:00:31.782870


 ==================== Epoch  57 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79762447 ; Test F1:  0.87521267 ; Test Accuracy:  0.9852503726356908   and Testing Time :  0:00:30.167051
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7986754 ; Test F1:  0.8760333 ; Test Accuracy:  0.9851720709549753   and Testing Time :  0:00:31.750706


 ==================== Epoch  58 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7978054 ; Test F1:  0.8753537 ; Test Accuracy:  0.9852394505550987   and Testing Time :  0:00:30.214315
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79862046 ; Test F1:  0.8759905 ; Test Accuracy:  0.9851756848787007   and Testing Time :  0:00:31.819810


 ==================== Epoch  59 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79745483 ; Test F1:  0.8750804 ; Test Accuracy:  0.9852594475997122   and Testing Time :  0:00:30.187015
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79844 ; Test F1:  0.87584966 ; Test Accuracy:  0.9851897390265214   and Testing Time :  0:00:31.749017


 ==================== Epoch  60 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7973809 ; Test F1:  0.87502205 ; Test Accuracy:  0.9852689241108141   and Testing Time :  0:00:30.198442
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79852784 ; Test F1:  0.8759164 ; Test Accuracy:  0.9851956016138981   and Testing Time :  0:00:31.804250


 ==================== Epoch  61 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7992118 ; Test F1:  0.8764514 ; Test Accuracy:  0.9851312737715872   and Testing Time :  0:00:30.537106
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79883873 ; Test F1:  0.87615895 ; Test Accuracy:  0.985173195286801   and Testing Time :  0:00:32.145809


 ==================== Epoch  62 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79881865 ; Test F1:  0.8761442 ; Test Accuracy:  0.9851674130088405   and Testing Time :  0:00:30.197061
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79832184 ; Test F1:  0.87575996 ; Test Accuracy:  0.9851806640625   and Testing Time :  0:00:32.073330


 ==================== Epoch  63 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7983228 ; Test F1:  0.8757626 ; Test Accuracy:  0.9851662886770148   and Testing Time :  0:00:30.226920
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79792774 ; Test F1:  0.8754581 ; Test Accuracy:  0.9851673326994244   and Testing Time :  0:00:32.213642


 ==================== Epoch  64 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7979752 ; Test F1:  0.87549645 ; Test Accuracy:  0.9851540013363487   and Testing Time :  0:00:30.248544
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.79760265 ; Test F1:  0.8752103 ; Test Accuracy:  0.9851455688476562   and Testing Time :  0:00:32.071553
