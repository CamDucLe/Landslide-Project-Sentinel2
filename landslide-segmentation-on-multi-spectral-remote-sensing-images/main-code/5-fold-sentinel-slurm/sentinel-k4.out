2023-09-15 20:39:32.438422: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-09-15 20:39:33.278326: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22843 MB memory:  -> device: 0, name: TITAN RTX, pci bus id: 0000:3f:00.0, compute capability: 7.5
Finished preparing dataset!
Python version:  3.8.17
Tensorflow version:  2.8.0
Numpy version:  1.23.5 

==== Test fold:  4  =====
number of training images:  3039
........ creating model ! .........
ListWrapper([<losses.FocalLoss object at 0x7ff0a83b6a00>, <losses.IOULoss object at 0x7ff0a83b6640>])
<tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=0.0004>
Model: "RNet"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 128, 128, 2  0           []                               
                                1)]                                                               
                                                                                                  
 conv2d (Conv2D)                (None, 128, 128, 12  24320       ['input_1[0][0]']                
                                8)                                                                
                                                                                                  
 batch_normalization (BatchNorm  (None, 128, 128, 12  512        ['conv2d[0][0]']                 
 alization)                     8)                                                                
                                                                                                  
 leaky_re_lu (LeakyReLU)        (None, 128, 128, 12  0           ['batch_normalization[0][0]']    
                                8)                                                                
                                                                                                  
 conv2d_1 (Conv2D)              (None, 128, 128, 12  147584      ['leaky_re_lu[0][0]']            
                                8)                                                                
                                                                                                  
 conv2d_2 (Conv2D)              (None, 128, 128, 12  65664       ['leaky_re_lu[0][0]']            
                                8)                                                                
                                                                                                  
 batch_normalization_1 (BatchNo  (None, 128, 128, 12  512        ['conv2d_1[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 batch_normalization_2 (BatchNo  (None, 128, 128, 12  512        ['conv2d_2[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 leaky_re_lu_1 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_1[0][0]']  
                                8)                                                                
                                                                                                  
 leaky_re_lu_2 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_2[0][0]']  
                                8)                                                                
                                                                                                  
 tf.__operators__.add (TFOpLamb  (None, 128, 128, 12  0          ['leaky_re_lu_1[0][0]',          
 da)                            8)                                'leaky_re_lu_2[0][0]']          
                                                                                                  
 conv2d_3 (Conv2D)              (None, 128, 128, 12  147584      ['tf.__operators__.add[0][0]']   
                                8)                                                                
                                                                                                  
 batch_normalization_3 (BatchNo  (None, 128, 128, 12  512        ['conv2d_3[0][0]']               
 rmalization)                   8)                                                                
                                                                                                  
 leaky_re_lu_3 (LeakyReLU)      (None, 128, 128, 12  0           ['batch_normalization_3[0][0]']  
                                8)                                                                
                                                                                                  
 global_average_pooling2d (Glob  (None, 128)         0           ['leaky_re_lu_3[0][0]']          
 alAveragePooling2D)                                                                              
                                                                                                  
 dense (Dense)                  (None, 64)           8256        ['global_average_pooling2d[0][0]'
                                                                 ]                                
                                                                                                  
 dense_1 (Dense)                (None, 128)          8320        ['dense[0][0]']                  
                                                                                                  
 reshape (Reshape)              (None, 1, 1, 128)    0           ['dense_1[0][0]']                
                                                                                                  
 tf.math.multiply (TFOpLambda)  (None, 128, 128, 12  0           ['leaky_re_lu_3[0][0]',          
                                8)                                'reshape[0][0]']                
                                                                                                  
 tf.__operators__.add_1 (TFOpLa  (None, 128, 128, 12  0          ['tf.math.multiply[0][0]',       
 mbda)                          8)                                'leaky_re_lu[0][0]']            
                                                                                                  
 conv2d_4 (Conv2D)              (None, 64, 64, 128)  65664       ['tf.__operators__.add_1[0][0]'] 
                                                                                                  
 conv2d_5 (Conv2D)              (None, 64, 64, 128)  147584      ['conv2d_4[0][0]']               
                                                                                                  
 conv2d_6 (Conv2D)              (None, 64, 64, 128)  65664       ['conv2d_4[0][0]']               
                                                                                                  
 batch_normalization_4 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_5[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 batch_normalization_5 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_6[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_4 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_4[0][0]']  
                                                                                                  
 leaky_re_lu_5 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_5[0][0]']  
                                                                                                  
 tf.__operators__.add_2 (TFOpLa  (None, 64, 64, 128)  0          ['leaky_re_lu_4[0][0]',          
 mbda)                                                            'leaky_re_lu_5[0][0]']          
                                                                                                  
 conv2d_7 (Conv2D)              (None, 64, 64, 128)  147584      ['tf.__operators__.add_2[0][0]'] 
                                                                                                  
 batch_normalization_6 (BatchNo  (None, 64, 64, 128)  512        ['conv2d_7[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_6 (LeakyReLU)      (None, 64, 64, 128)  0           ['batch_normalization_6[0][0]']  
                                                                                                  
 global_average_pooling2d_1 (Gl  (None, 128)         0           ['leaky_re_lu_6[0][0]']          
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_2 (Dense)                (None, 64)           8256        ['global_average_pooling2d_1[0][0
                                                                 ]']                              
                                                                                                  
 dense_3 (Dense)                (None, 128)          8320        ['dense_2[0][0]']                
                                                                                                  
 reshape_1 (Reshape)            (None, 1, 1, 128)    0           ['dense_3[0][0]']                
                                                                                                  
 tf.math.multiply_1 (TFOpLambda  (None, 64, 64, 128)  0          ['leaky_re_lu_6[0][0]',          
 )                                                                'reshape_1[0][0]']              
                                                                                                  
 tf.__operators__.add_3 (TFOpLa  (None, 64, 64, 128)  0          ['tf.math.multiply_1[0][0]',     
 mbda)                                                            'conv2d_4[0][0]']               
                                                                                                  
 conv2d_8 (Conv2D)              (None, 32, 32, 128)  65664       ['tf.__operators__.add_3[0][0]'] 
                                                                                                  
 conv2d_9 (Conv2D)              (None, 32, 32, 128)  147584      ['conv2d_8[0][0]']               
                                                                                                  
 conv2d_10 (Conv2D)             (None, 32, 32, 128)  65664       ['conv2d_8[0][0]']               
                                                                                                  
 batch_normalization_7 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_9[0][0]']               
 rmalization)                                                                                     
                                                                                                  
 batch_normalization_8 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_10[0][0]']              
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_7 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_7[0][0]']  
                                                                                                  
 leaky_re_lu_8 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_8[0][0]']  
                                                                                                  
 tf.__operators__.add_4 (TFOpLa  (None, 32, 32, 128)  0          ['leaky_re_lu_7[0][0]',          
 mbda)                                                            'leaky_re_lu_8[0][0]']          
                                                                                                  
 conv2d_11 (Conv2D)             (None, 32, 32, 128)  147584      ['tf.__operators__.add_4[0][0]'] 
                                                                                                  
 batch_normalization_9 (BatchNo  (None, 32, 32, 128)  512        ['conv2d_11[0][0]']              
 rmalization)                                                                                     
                                                                                                  
 leaky_re_lu_9 (LeakyReLU)      (None, 32, 32, 128)  0           ['batch_normalization_9[0][0]']  
                                                                                                  
 global_average_pooling2d_2 (Gl  (None, 128)         0           ['leaky_re_lu_9[0][0]']          
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_4 (Dense)                (None, 64)           8256        ['global_average_pooling2d_2[0][0
                                                                 ]']                              
                                                                                                  
 dense_5 (Dense)                (None, 128)          8320        ['dense_4[0][0]']                
                                                                                                  
 reshape_2 (Reshape)            (None, 1, 1, 128)    0           ['dense_5[0][0]']                
                                                                                                  
 tf.math.multiply_2 (TFOpLambda  (None, 32, 32, 128)  0          ['leaky_re_lu_9[0][0]',          
 )                                                                'reshape_2[0][0]']              
                                                                                                  
 tf.__operators__.add_5 (TFOpLa  (None, 32, 32, 128)  0          ['tf.math.multiply_2[0][0]',     
 mbda)                                                            'conv2d_8[0][0]']               
                                                                                                  
 conv2d_12 (Conv2D)             (None, 16, 16, 128)  65664       ['tf.__operators__.add_5[0][0]'] 
                                                                                                  
 conv2d_13 (Conv2D)             (None, 16, 16, 128)  147584      ['conv2d_12[0][0]']              
                                                                                                  
 conv2d_14 (Conv2D)             (None, 16, 16, 128)  65664       ['conv2d_12[0][0]']              
                                                                                                  
 batch_normalization_10 (BatchN  (None, 16, 16, 128)  512        ['conv2d_13[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_11 (BatchN  (None, 16, 16, 128)  512        ['conv2d_14[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_10 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_10[0][0]'] 
                                                                                                  
 leaky_re_lu_11 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_11[0][0]'] 
                                                                                                  
 tf.__operators__.add_6 (TFOpLa  (None, 16, 16, 128)  0          ['leaky_re_lu_10[0][0]',         
 mbda)                                                            'leaky_re_lu_11[0][0]']         
                                                                                                  
 conv2d_15 (Conv2D)             (None, 16, 16, 128)  147584      ['tf.__operators__.add_6[0][0]'] 
                                                                                                  
 batch_normalization_12 (BatchN  (None, 16, 16, 128)  512        ['conv2d_15[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_12 (LeakyReLU)     (None, 16, 16, 128)  0           ['batch_normalization_12[0][0]'] 
                                                                                                  
 global_average_pooling2d_3 (Gl  (None, 128)         0           ['leaky_re_lu_12[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_6 (Dense)                (None, 64)           8256        ['global_average_pooling2d_3[0][0
                                                                 ]']                              
                                                                                                  
 dense_7 (Dense)                (None, 128)          8320        ['dense_6[0][0]']                
                                                                                                  
 reshape_3 (Reshape)            (None, 1, 1, 128)    0           ['dense_7[0][0]']                
                                                                                                  
 tf.math.multiply_3 (TFOpLambda  (None, 16, 16, 128)  0          ['leaky_re_lu_12[0][0]',         
 )                                                                'reshape_3[0][0]']              
                                                                                                  
 tf.__operators__.add_7 (TFOpLa  (None, 16, 16, 128)  0          ['tf.math.multiply_3[0][0]',     
 mbda)                                                            'conv2d_12[0][0]']              
                                                                                                  
 conv2d_16 (Conv2D)             (None, 8, 8, 128)    65664       ['tf.__operators__.add_7[0][0]'] 
                                                                                                  
 conv2d_transpose (Conv2DTransp  (None, 16, 16, 128)  65664      ['conv2d_16[0][0]']              
 ose)                                                                                             
                                                                                                  
 concatenate (Concatenate)      (None, 16, 16, 256)  0           ['conv2d_transpose[0][0]',       
                                                                  'tf.__operators__.add_7[0][0]'] 
                                                                                                  
 conv2d_20 (Conv2D)             (None, 16, 16, 256)  590080      ['concatenate[0][0]']            
                                                                                                  
 conv2d_21 (Conv2D)             (None, 16, 16, 256)  262400      ['concatenate[0][0]']            
                                                                                                  
 batch_normalization_16 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_20[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_17 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_21[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_16 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_16[0][0]'] 
                                                                                                  
 leaky_re_lu_17 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_17[0][0]'] 
                                                                                                  
 tf.__operators__.add_10 (TFOpL  (None, 16, 16, 256)  0          ['leaky_re_lu_16[0][0]',         
 ambda)                                                           'leaky_re_lu_17[0][0]']         
                                                                                                  
 conv2d_22 (Conv2D)             (None, 16, 16, 256)  590080      ['tf.__operators__.add_10[0][0]']
                                                                                                  
 batch_normalization_18 (BatchN  (None, 16, 16, 256)  1024       ['conv2d_22[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_18 (LeakyReLU)     (None, 16, 16, 256)  0           ['batch_normalization_18[0][0]'] 
                                                                                                  
 global_average_pooling2d_5 (Gl  (None, 256)         0           ['leaky_re_lu_18[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_10 (Dense)               (None, 128)          32896       ['global_average_pooling2d_5[0][0
                                                                 ]']                              
                                                                                                  
 dense_11 (Dense)               (None, 256)          33024       ['dense_10[0][0]']               
                                                                                                  
 reshape_5 (Reshape)            (None, 1, 1, 256)    0           ['dense_11[0][0]']               
                                                                                                  
 tf.math.multiply_5 (TFOpLambda  (None, 16, 16, 256)  0          ['leaky_re_lu_18[0][0]',         
 )                                                                'reshape_5[0][0]']              
                                                                                                  
 tf.__operators__.add_11 (TFOpL  (None, 16, 16, 256)  0          ['tf.math.multiply_5[0][0]',     
 ambda)                                                           'concatenate[0][0]']            
                                                                                                  
 conv2d_transpose_1 (Conv2DTran  (None, 32, 32, 256)  262400     ['tf.__operators__.add_11[0][0]']
 spose)                                                                                           
                                                                                                  
 concatenate_1 (Concatenate)    (None, 32, 32, 384)  0           ['conv2d_transpose_1[0][0]',     
                                                                  'tf.__operators__.add_5[0][0]'] 
                                                                                                  
 conv2d_23 (Conv2D)             (None, 32, 32, 384)  1327488     ['concatenate_1[0][0]']          
                                                                                                  
 conv2d_24 (Conv2D)             (None, 32, 32, 384)  590208      ['concatenate_1[0][0]']          
                                                                                                  
 batch_normalization_19 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_23[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_20 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_24[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_19 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_19[0][0]'] 
                                                                                                  
 leaky_re_lu_20 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_20[0][0]'] 
                                                                                                  
 tf.__operators__.add_12 (TFOpL  (None, 32, 32, 384)  0          ['leaky_re_lu_19[0][0]',         
 ambda)                                                           'leaky_re_lu_20[0][0]']         
                                                                                                  
 conv2d_25 (Conv2D)             (None, 32, 32, 384)  1327488     ['tf.__operators__.add_12[0][0]']
                                                                                                  
 batch_normalization_21 (BatchN  (None, 32, 32, 384)  1536       ['conv2d_25[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_21 (LeakyReLU)     (None, 32, 32, 384)  0           ['batch_normalization_21[0][0]'] 
                                                                                                  
 global_average_pooling2d_6 (Gl  (None, 384)         0           ['leaky_re_lu_21[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_12 (Dense)               (None, 192)          73920       ['global_average_pooling2d_6[0][0
                                                                 ]']                              
                                                                                                  
 dense_13 (Dense)               (None, 384)          74112       ['dense_12[0][0]']               
                                                                                                  
 reshape_6 (Reshape)            (None, 1, 1, 384)    0           ['dense_13[0][0]']               
                                                                                                  
 tf.math.multiply_6 (TFOpLambda  (None, 32, 32, 384)  0          ['leaky_re_lu_21[0][0]',         
 )                                                                'reshape_6[0][0]']              
                                                                                                  
 tf.__operators__.add_13 (TFOpL  (None, 32, 32, 384)  0          ['tf.math.multiply_6[0][0]',     
 ambda)                                                           'concatenate_1[0][0]']          
                                                                                                  
 conv2d_transpose_2 (Conv2DTran  (None, 64, 64, 384)  590208     ['tf.__operators__.add_13[0][0]']
 spose)                                                                                           
                                                                                                  
 concatenate_2 (Concatenate)    (None, 64, 64, 512)  0           ['conv2d_transpose_2[0][0]',     
                                                                  'tf.__operators__.add_3[0][0]'] 
                                                                                                  
 conv2d_26 (Conv2D)             (None, 64, 64, 512)  2359808     ['concatenate_2[0][0]']          
                                                                                                  
 conv2d_27 (Conv2D)             (None, 64, 64, 512)  1049088     ['concatenate_2[0][0]']          
                                                                                                  
 batch_normalization_22 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_26[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 batch_normalization_23 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_27[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_22 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_22[0][0]'] 
                                                                                                  
 leaky_re_lu_23 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_23[0][0]'] 
                                                                                                  
 tf.__operators__.add_14 (TFOpL  (None, 64, 64, 512)  0          ['leaky_re_lu_22[0][0]',         
 ambda)                                                           'leaky_re_lu_23[0][0]']         
                                                                                                  
 conv2d_28 (Conv2D)             (None, 64, 64, 512)  2359808     ['tf.__operators__.add_14[0][0]']
                                                                                                  
 batch_normalization_24 (BatchN  (None, 64, 64, 512)  2048       ['conv2d_28[0][0]']              
 ormalization)                                                                                    
                                                                                                  
 leaky_re_lu_24 (LeakyReLU)     (None, 64, 64, 512)  0           ['batch_normalization_24[0][0]'] 
                                                                                                  
 global_average_pooling2d_7 (Gl  (None, 512)         0           ['leaky_re_lu_24[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_14 (Dense)               (None, 256)          131328      ['global_average_pooling2d_7[0][0
                                                                 ]']                              
                                                                                                  
 dense_15 (Dense)               (None, 512)          131584      ['dense_14[0][0]']               
                                                                                                  
 reshape_7 (Reshape)            (None, 1, 1, 512)    0           ['dense_15[0][0]']               
                                                                                                  
 tf.math.multiply_7 (TFOpLambda  (None, 64, 64, 512)  0          ['leaky_re_lu_24[0][0]',         
 )                                                                'reshape_7[0][0]']              
                                                                                                  
 tf.__operators__.add_15 (TFOpL  (None, 64, 64, 512)  0          ['tf.math.multiply_7[0][0]',     
 ambda)                                                           'concatenate_2[0][0]']          
                                                                                                  
 conv2d_transpose_3 (Conv2DTran  (None, 128, 128, 51  1049088    ['tf.__operators__.add_15[0][0]']
 spose)                         2)                                                                
                                                                                                  
 concatenate_3 (Concatenate)    (None, 128, 128, 64  0           ['conv2d_transpose_3[0][0]',     
                                0)                                'tf.__operators__.add_1[0][0]'] 
                                                                                                  
 conv2d_29 (Conv2D)             (None, 128, 128, 64  3687040     ['concatenate_3[0][0]']          
                                0)                                                                
                                                                                                  
 conv2d_30 (Conv2D)             (None, 128, 128, 64  1639040     ['concatenate_3[0][0]']          
                                0)                                                                
                                                                                                  
 batch_normalization_25 (BatchN  (None, 128, 128, 64  2560       ['conv2d_29[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 batch_normalization_26 (BatchN  (None, 128, 128, 64  2560       ['conv2d_30[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 leaky_re_lu_25 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_25[0][0]'] 
                                0)                                                                
                                                                                                  
 leaky_re_lu_26 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_26[0][0]'] 
                                0)                                                                
                                                                                                  
 tf.__operators__.add_16 (TFOpL  (None, 128, 128, 64  0          ['leaky_re_lu_25[0][0]',         
 ambda)                         0)                                'leaky_re_lu_26[0][0]']         
                                                                                                  
 conv2d_31 (Conv2D)             (None, 128, 128, 64  3687040     ['tf.__operators__.add_16[0][0]']
                                0)                                                                
                                                                                                  
 batch_normalization_27 (BatchN  (None, 128, 128, 64  2560       ['conv2d_31[0][0]']              
 ormalization)                  0)                                                                
                                                                                                  
 leaky_re_lu_27 (LeakyReLU)     (None, 128, 128, 64  0           ['batch_normalization_27[0][0]'] 
                                0)                                                                
                                                                                                  
 global_average_pooling2d_8 (Gl  (None, 640)         0           ['leaky_re_lu_27[0][0]']         
 obalAveragePooling2D)                                                                            
                                                                                                  
 dense_16 (Dense)               (None, 320)          205120      ['global_average_pooling2d_8[0][0
                                                                 ]']                              
                                                                                                  
 dense_17 (Dense)               (None, 640)          205440      ['dense_16[0][0]']               
                                                                                                  
 reshape_8 (Reshape)            (None, 1, 1, 640)    0           ['dense_17[0][0]']               
                                                                                                  
 tf.math.multiply_8 (TFOpLambda  (None, 128, 128, 64  0          ['leaky_re_lu_27[0][0]',         
 )                              0)                                'reshape_8[0][0]']              
                                                                                                  
 tf.__operators__.add_17 (TFOpL  (None, 128, 128, 64  0          ['tf.math.multiply_8[0][0]',     
 ambda)                         0)                                'concatenate_3[0][0]']          
                                                                                                  
 dropout (Dropout)              (None, 128, 128, 64  0           ['tf.__operators__.add_17[0][0]']
                                0)                                                                
                                                                                                  
 conv2d_transpose_4 (Conv2DTran  (None, 256, 256, 64  368704     ['dropout[0][0]']                
 spose)                         )                                                                 
                                                                                                  
 conv2d_32 (Conv2D)             (None, 64, 64, 64)   368704      ['dropout[0][0]']                
                                                                                                  
 conv2d_33 (Conv2D)             (None, 256, 256, 2)  130         ['conv2d_transpose_4[0][0]']     
                                                                                                  
 conv2d_34 (Conv2D)             (None, 128, 128, 2)  1282        ['dropout[0][0]']                
                                                                                                  
 conv2d_35 (Conv2D)             (None, 64, 64, 2)    130         ['conv2d_32[0][0]']              
                                                                                                  
==================================================================================================
Total params: 24,888,070
Trainable params: 24,873,990
Non-trainable params: 14,080
__________________________________________________________________________________________________
2023-09-15 20:39:35.308904: I tensorflow/stream_executor/cuda/cuda_dnn.cc:368] Loaded cuDNN version 8101
### START TRAINING PROCESS ###
batch train:  254 3
batch test:  64 4


 ==================== Epoch  0 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........


 ==================== Epoch  1 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.61570954 ; Test F1:  0.70558345 ; Test Accuracy:  0.954297517475329   and Testing Time :  0:00:33.435541
...... Save model completed ......


 ==================== Epoch  2 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6802047 ; Test F1:  0.7729981 ; Test Accuracy:  0.971212447317023   and Testing Time :  0:00:32.122503
...... Save model completed ......


 ==================== Epoch  3 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.65941715 ; Test F1:  0.75153744 ; Test Accuracy:  0.96870799817537   and Testing Time :  0:00:32.100117


 ==================== Epoch  4 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.65119034 ; Test F1:  0.74434596 ; Test Accuracy:  0.9624508506373355   and Testing Time :  0:00:32.115590


 ==================== Epoch  5 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6702905 ; Test F1:  0.76245105 ; Test Accuracy:  0.9716315821597451   and Testing Time :  0:00:32.076057


 ==================== Epoch  6 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.67557114 ; Test F1:  0.7682406 ; Test Accuracy:  0.970929597553454   and Testing Time :  0:00:31.971760


 ==================== Epoch  7 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-04>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.69972926 ; Test F1:  0.7910334 ; Test Accuracy:  0.9779532181589227   and Testing Time :  0:00:32.058542
...... Save model completed ......


 ==================== Epoch  8 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.66777563 ; Test F1:  0.7604154 ; Test Accuracy:  0.9693504735043175   and Testing Time :  0:00:31.855445


 ==================== Epoch  9 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6691838 ; Test F1:  0.760818 ; Test Accuracy:  0.9731923153525904   and Testing Time :  0:00:31.983545


 ==================== Epoch  10 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.66672033 ; Test F1:  0.75919497 ; Test Accuracy:  0.9696517944335937   and Testing Time :  0:00:31.812478


 ==================== Epoch  11 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.68152225 ; Test F1:  0.7737484 ; Test Accuracy:  0.9734868099814967   and Testing Time :  0:00:31.901119


 ==================== Epoch  12 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.68573475 ; Test F1:  0.77761066 ; Test Accuracy:  0.9752858212119655   and Testing Time :  0:00:31.874015


 ==================== Epoch  13 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.68531257 ; Test F1:  0.77781326 ; Test Accuracy:  0.9728864970960115   and Testing Time :  0:00:32.035277


 ==================== Epoch  14 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6629031 ; Test F1:  0.75490034 ; Test Accuracy:  0.9702083386872944   and Testing Time :  0:00:32.219941


 ==================== Epoch  15 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.69724804 ; Test F1:  0.78813803 ; Test Accuracy:  0.9796672620271382   and Testing Time :  0:00:32.120395


 ==================== Epoch  16 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7038167 ; Test F1:  0.7942405 ; Test Accuracy:  0.9813184236225329   and Testing Time :  0:00:32.136828
...... Save model completed ......


 ==================== Epoch  17 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.6965496 ; Test F1:  0.7876651 ; Test Accuracy:  0.9787731772974918   and Testing Time :  0:00:32.829748


 ==================== Epoch  18 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7032906 ; Test F1:  0.7942813 ; Test Accuracy:  0.9790251882452714   and Testing Time :  0:00:32.716133
...... Save model completed ......


 ==================== Epoch  19 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7007722 ; Test F1:  0.7906953 ; Test Accuracy:  0.9834876612613076   and Testing Time :  0:00:32.032053


 ==================== Epoch  20 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.73075646 ; Test F1:  0.8192322 ; Test Accuracy:  0.9838623849969161   and Testing Time :  0:00:32.103719
...... Save model completed ......


 ==================== Epoch  21 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.73861897 ; Test F1:  0.82637286 ; Test Accuracy:  0.9837925961143092   and Testing Time :  0:00:30.689344
...... Save model completed ......


 ==================== Epoch  22 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.73265487 ; Test F1:  0.8210298 ; Test Accuracy:  0.9835589760228207   and Testing Time :  0:00:32.432134


 ==================== Epoch  23 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.72683716 ; Test F1:  0.8155855 ; Test Accuracy:  0.9840349699321546   and Testing Time :  0:00:32.414842


 ==================== Epoch  24 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-05>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.71212524 ; Test F1:  0.8016465 ; Test Accuracy:  0.9841885215357731   and Testing Time :  0:00:32.416892


 ==================== Epoch  25 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.73919725 ; Test F1:  0.82670164 ; Test Accuracy:  0.984739122892681   and Testing Time :  0:00:32.375767
...... Save model completed ......


 ==================== Epoch  26 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7392868 ; Test F1:  0.82669973 ; Test Accuracy:  0.9851504677220395   and Testing Time :  0:00:30.748202
...... Save model completed ......


 ==================== Epoch  27 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7476236 ; Test F1:  0.8341133 ; Test Accuracy:  0.9850476716694079   and Testing Time :  0:00:32.226110
...... Save model completed ......


 ==================== Epoch  28 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.74994624 ; Test F1:  0.83615553 ; Test Accuracy:  0.984986074347245   and Testing Time :  0:00:31.349155
...... Save model completed ......


 ==================== Epoch  29 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7507253 ; Test F1:  0.83677983 ; Test Accuracy:  0.9852752685546875   and Testing Time :  0:00:31.138241
...... Save model completed ......


 ==================== Epoch  30 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7576318 ; Test F1:  0.84266376 ; Test Accuracy:  0.9856715152138158   and Testing Time :  0:00:30.645916
...... Save model completed ......


 ==================== Epoch  31 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7582624 ; Test F1:  0.843194 ; Test Accuracy:  0.9857192190069901   and Testing Time :  0:00:30.799245
...... Save model completed ......


 ==================== Epoch  32 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7604484 ; Test F1:  0.845069 ; Test Accuracy:  0.985636419998972   and Testing Time :  0:00:30.744916
...... Save model completed ......


 ==================== Epoch  33 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7581614 ; Test F1:  0.84308773 ; Test Accuracy:  0.985831009714227   and Testing Time :  0:00:31.127201


 ==================== Epoch  34 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=2e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.75855184 ; Test F1:  0.84343684 ; Test Accuracy:  0.9857414647152549   and Testing Time :  0:00:31.128449


 ==================== Epoch  35 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76140356 ; Test F1:  0.84584343 ; Test Accuracy:  0.9858368723016037   and Testing Time :  0:00:31.034947
...... Save model completed ......


 ==================== Epoch  36 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76416147 ; Test F1:  0.8481775 ; Test Accuracy:  0.9857947901675576   and Testing Time :  0:00:32.604420
...... Save model completed ......
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76193106 ; Test F1:  0.84631735 ; Test Accuracy:  0.9856793855365954   and Testing Time :  0:00:31.136955


 ==================== Epoch  37 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7640754 ; Test F1:  0.84811217 ; Test Accuracy:  0.9857539126747533   and Testing Time :  0:00:30.968949
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76165783 ; Test F1:  0.8460919 ; Test Accuracy:  0.9856469405324836   and Testing Time :  0:00:31.251076


 ==================== Epoch  38 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7645969 ; Test F1:  0.84854317 ; Test Accuracy:  0.9857956735711348   and Testing Time :  0:00:31.289472
...... Save model completed ......
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7615515 ; Test F1:  0.8459765 ; Test Accuracy:  0.9857927021227385   and Testing Time :  0:00:31.097444


 ==================== Epoch  39 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7638252 ; Test F1:  0.8479006 ; Test Accuracy:  0.9857607389751234   and Testing Time :  0:00:31.495501
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76176524 ; Test F1:  0.8461694 ; Test Accuracy:  0.9857237163342928   and Testing Time :  0:00:31.169284


 ==================== Epoch  40 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.764271 ; Test F1:  0.8482485 ; Test Accuracy:  0.9859173423365543   and Testing Time :  0:00:31.179098
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7611089 ; Test F1:  0.84560424 ; Test Accuracy:  0.9857780054995888   and Testing Time :  0:00:31.232968


 ==================== Epoch  41 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-06>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7651751 ; Test F1:  0.84903634 ; Test Accuracy:  0.9857482107062089   and Testing Time :  0:00:31.057299
...... Save model completed ......
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7624848 ; Test F1:  0.8467597 ; Test Accuracy:  0.9858253880550987   and Testing Time :  0:00:32.908753


 ==================== Epoch  42 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7636464 ; Test F1:  0.8477154 ; Test Accuracy:  0.9859611109683388   and Testing Time :  0:00:32.909856
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7631563 ; Test F1:  0.8473382 ; Test Accuracy:  0.9857554385536595   and Testing Time :  0:00:33.070414


 ==================== Epoch  43 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7646064 ; Test F1:  0.8485302 ; Test Accuracy:  0.9859174226459704   and Testing Time :  0:00:32.884226
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7637904 ; Test F1:  0.84787107 ; Test Accuracy:  0.9857626664011102   and Testing Time :  0:00:33.001804


 ==================== Epoch  44 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76406634 ; Test F1:  0.8480661 ; Test Accuracy:  0.9859770122327303   and Testing Time :  0:00:32.865202
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7643573 ; Test F1:  0.8483309 ; Test Accuracy:  0.9858592786287007   and Testing Time :  0:00:33.091811


 ==================== Epoch  45 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76445097 ; Test F1:  0.8483942 ; Test Accuracy:  0.9859488236276727   and Testing Time :  0:00:33.042568
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76364005 ; Test F1:  0.8477217 ; Test Accuracy:  0.9858946147717927   and Testing Time :  0:00:32.699430


 ==================== Epoch  46 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7646274 ; Test F1:  0.84854954 ; Test Accuracy:  0.9859073839689556   and Testing Time :  0:00:33.036125
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76413655 ; Test F1:  0.8481594 ; Test Accuracy:  0.98577880859375   and Testing Time :  0:00:32.607983


 ==================== Epoch  47 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76435494 ; Test F1:  0.8483129 ; Test Accuracy:  0.9859531603361431   and Testing Time :  0:00:33.004747
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76413935 ; Test F1:  0.84814525 ; Test Accuracy:  0.985874376798931   and Testing Time :  0:00:32.271668


 ==================== Epoch  48 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76490885 ; Test F1:  0.8487892 ; Test Accuracy:  0.9858870656866776   and Testing Time :  0:00:32.887509
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76372814 ; Test F1:  0.84780216 ; Test Accuracy:  0.9858587967722039   and Testing Time :  0:00:31.991492


 ==================== Epoch  49 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=5e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7649193 ; Test F1:  0.8487964 ; Test Accuracy:  0.9858970240542763   and Testing Time :  0:00:33.041664
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76371247 ; Test F1:  0.84777164 ; Test Accuracy:  0.9859575773540296   and Testing Time :  0:00:31.593401


 ==================== Epoch  50 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7639115 ; Test F1:  0.8479319 ; Test Accuracy:  0.9859994988692434   and Testing Time :  0:00:32.987101
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76397145 ; Test F1:  0.84799933 ; Test Accuracy:  0.9859020032380756   and Testing Time :  0:00:31.299581


 ==================== Epoch  51 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76388407 ; Test F1:  0.8479127 ; Test Accuracy:  0.9859773334703947   and Testing Time :  0:00:33.032346
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7641357 ; Test F1:  0.84813434 ; Test Accuracy:  0.985918546977796   and Testing Time :  0:00:31.255905


 ==================== Epoch  52 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7642094 ; Test F1:  0.84818757 ; Test Accuracy:  0.985970748098273   and Testing Time :  0:00:32.977331
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7643634 ; Test F1:  0.8483319 ; Test Accuracy:  0.9858838533100329   and Testing Time :  0:00:31.344900


 ==================== Epoch  53 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76425886 ; Test F1:  0.8482337 ; Test Accuracy:  0.9859431216591283   and Testing Time :  0:00:32.796333
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7644565 ; Test F1:  0.84841156 ; Test Accuracy:  0.9858755011307566   and Testing Time :  0:00:31.329445


 ==================== Epoch  54 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7644031 ; Test F1:  0.84835494 ; Test Accuracy:  0.9859434428967928   and Testing Time :  0:00:32.805368
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7645743 ; Test F1:  0.84850985 ; Test Accuracy:  0.985879195363898   and Testing Time :  0:00:31.833176


 ==================== Epoch  55 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76453614 ; Test F1:  0.8484663 ; Test Accuracy:  0.985946334035773   and Testing Time :  0:00:32.918508
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76465225 ; Test F1:  0.8485749 ; Test Accuracy:  0.98588184557463   and Testing Time :  0:00:31.722197


 ==================== Epoch  56 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7645612 ; Test F1:  0.8484856 ; Test Accuracy:  0.9859556499280427   and Testing Time :  0:00:32.998597
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76484644 ; Test F1:  0.8487396 ; Test Accuracy:  0.9858719675164473   and Testing Time :  0:00:32.147788


 ==================== Epoch  57 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7645877 ; Test F1:  0.8485048 ; Test Accuracy:  0.9859740407843339   and Testing Time :  0:00:32.759503
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76446366 ; Test F1:  0.8484117 ; Test Accuracy:  0.9859101947985197   and Testing Time :  0:00:32.573261


 ==================== Epoch  58 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7644565 ; Test F1:  0.8483976 ; Test Accuracy:  0.9859566939504523   and Testing Time :  0:00:32.886765
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7645508 ; Test F1:  0.84849 ; Test Accuracy:  0.9858795969109786   and Testing Time :  0:00:32.581240


 ==================== Epoch  59 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7642775 ; Test F1:  0.8482439 ; Test Accuracy:  0.9859757272820724   and Testing Time :  0:00:32.969330
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7644733 ; Test F1:  0.8484268 ; Test Accuracy:  0.9858681929738898   and Testing Time :  0:00:32.939095


 ==================== Epoch  60 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76433706 ; Test F1:  0.8482974 ; Test Accuracy:  0.9859550074527138   and Testing Time :  0:00:32.942323
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7644518 ; Test F1:  0.8484005 ; Test Accuracy:  0.9859170210988898   and Testing Time :  0:00:33.517266


 ==================== Epoch  61 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7659154 ; Test F1:  0.84970987 ; Test Accuracy:  0.9854349236739309   and Testing Time :  0:00:33.546777
...... Save model completed ......
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7660374 ; Test F1:  0.849759 ; Test Accuracy:  0.9857454801860609   and Testing Time :  0:00:33.127540
...... Save model completed ......


 ==================== Epoch  62 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7659364 ; Test F1:  0.8496878 ; Test Accuracy:  0.9856672588147615   and Testing Time :  0:00:31.112915
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7658186 ; Test F1:  0.84956723 ; Test Accuracy:  0.9857963963558799   and Testing Time :  0:00:31.476812


 ==================== Epoch  63 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76581573 ; Test F1:  0.849576 ; Test Accuracy:  0.9857303820158306   and Testing Time :  0:00:30.943299
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76565063 ; Test F1:  0.84942245 ; Test Accuracy:  0.9858212922748767   and Testing Time :  0:00:31.585943


 ==================== Epoch  64 ======================
 *** learning rate:  <tf.Variable 'learning_rate:0' shape=() dtype=float32, numpy=1e-07>
-------- training ---------
........  50% ..........
------ testing -------
>>>>> Test MeanIOU:  0.7655972 ; Test F1:  0.8493889 ; Test Accuracy:  0.9857556794819079   and Testing Time :  0:00:31.574344
........  100% ..........
------ testing -------
>>>>> Test MeanIOU:  0.76538 ; Test F1:  0.8491943 ; Test Accuracy:  0.9858287610505757   and Testing Time :  0:00:31.367847
